package io.mountblue.controller;

import io.mountblue.dto.PostDto;
import io.mountblue.models.Post;
import io.mountblue.models.Tag;
import io.mountblue.service.PostService;
import io.mountblue.service.PostTagService;
import io.mountblue.service.TagService;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Controller
public class PostController {

    private final PostService postService;
    private final PostTagService postTagService;
    private final TagService tagService;

    public PostController(PostService postService , PostTagService postTagService,TagService tagService){
        this.postService = postService;
        this.postTagService = postTagService;
        this.tagService = tagService;
    }

    @GetMapping("/")
    public String dashboard(Model model){
        List<Post> posts = postService.getAllPosts();
        List<Tag> tags = tagService.getAllTags();
        model.addAttribute("posts",posts);
        model.addAttribute("tag",tags);
        return "dashboard";
    }

    @GetMapping("/post/{id}")
    public String postview(@PathVariable Long id,Model model){
        Post post = postService.findPostById(id);
        model.addAttribute("post",post);
        return "post-detail";
    }

    @GetMapping ("/post/edit/{id}")
    public String showeditpost(@PathVariable Long id,Model model){
        Post post = postService.findPostById(id);
        String tag = postTagService.FindTagbyPost(id);
        //String tag = "this is autogenerated";
        model.addAttribute("post",post);
        model.addAttribute("taglist",tag);
        //System.out.println("taglist------->"+tag);
        return "editpost";
    }
    @PostMapping("/post/edit/{id}")
    public String editpost(@ModelAttribute PostDto postDto){
        postService.updatePost(postDto);
        return "redirect:/";
    }
    @PostMapping("/post/delete/{id}")
    public String deletepost(@PathVariable Long id){
        postService.deletePost(id);
        return "redirect:/";
    }


    @GetMapping("/newpost")
    public String showNewPostFrom(Model model){
        Post post = new Post();
        model.addAttribute("post",post);
        model.addAttribute("tag",new String());
        return "newpost";
    }
    @PostMapping("/newpost")
    public String newpost(@ModelAttribute PostDto post,@RequestParam String tag){
        postService.savePost(post,tag);
        return "redirect:/";
    }
}
